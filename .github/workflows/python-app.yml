# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  testing:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Restore PDK Directory
      id: pdk-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          pdk/
        key: ${{ runner.os }}-pdk-${{ hashFiles('**/hades/techno.yml') }}
    - name: Config Windows - Setup External Tools
      if: ${{runner.os == 'Windows' }}
      run: |
        wsl --list
        wsl sudo apt-get update
        wsl sudo apt-get install -y klayout ngspice
    - name: Config Ubuntu - Setup External Tools
      if: ${{runner.os != 'Windows' }}
      run: |
        sudo apt-get update
        sudo apt-get install -y klayout ngspice
    - uses: actions/checkout@v4
    - name: Install poetry
      run: pipx install poetry
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        cache: 'poetry'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        poetry install --with dev,doc
        poetry run pwd
    - name: check and format
      continue-on-error: true
      run: |
        poetry run ruff check --output-format=github .
        poetry run ruff format --check .
    - name: Install PDK
      run: |
        poetry run hades pdk install sky130
        poetry run hades pdk install gf180mcu
    - if: ${{ steps.pdk-restore.outputs.cache-hit != 'true' }}
      name: Save PDK Directory
      id: pdk-save
      uses: actions/cache/save@v4
      with:
        path: |
          pdk/
        key: ${{ steps.pdk-restore.outputs.cache-primary-key }}
    - name: Build Doc
      run: |
        poetry run mkdocs build
    - name: Test with Pytest
      run: |
        poetry run pytest -rxXs
